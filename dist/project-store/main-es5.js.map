{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.component.ts","webpack:///src/app/auth/auth.component.html","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/material.module.ts","webpack:///src/app/model/auth.service.ts","webpack:///src/app/model/cart.model.ts","webpack:///src/app/model/model.module.ts","webpack:///src/app/model/model.resolver.ts","webpack:///src/app/model/order.model.ts","webpack:///src/app/model/order.repository.ts","webpack:///src/app/model/product.model.ts","webpack:///src/app/model/product.repository.ts","webpack:///src/app/model/rest.datasource.ts","webpack:///src/app/model/showImage.directive.ts","webpack:///src/app/model/tokenInterceptor.service.ts","webpack:///src/app/store/about/about.component.ts","webpack:///src/app/store/about/about.component.html","webpack:///src/app/store/advertisement/carousel-basic.module.ts","webpack:///src/app/store/advertisement/carousel.basic.ts","webpack:///src/app/store/advertisement/carousel-basic.html","webpack:///src/app/store/cartDetail/cartDetail.component.ts","webpack:///src/app/store/cartDetail/cartDetail.component.html","webpack:///src/app/store/cartSummary/cartSummary.component.ts","webpack:///src/app/store/cartSummary/cartSummary.component.html","webpack:///src/app/store/cartWindow/cartWindow.component.ts","webpack:///src/app/store/cartWindow/cartWindow.component.html","webpack:///src/app/store/checkout/checkout.component.ts","webpack:///src/app/store/checkout/checkout.component.html","webpack:///src/app/store/footer/footer.component.ts","webpack:///src/app/store/footer/footer.component.html","webpack:///src/app/store/main/main.component.ts","webpack:///src/app/store/main/main.component.html","webpack:///src/app/store/navbar/navbar.component.ts","webpack:///src/app/store/navbar/navbar.component.html","webpack:///src/app/store/productDetail/productDetail.component.ts","webpack:///src/app/store/productDetail/productDetail.component.html","webpack:///src/app/store/store.component.ts","webpack:///src/app/store/store.component.html","webpack:///src/app/store/store.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","childRoutes","path","component","model","routes","loadChildren","mod","AdminModule","canActivate","children","redirectTo","AppRoutingModule","forRoot","scrollPositionRestoration","imports","providers","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","bootstrap","AuthComponent","router","auth","form","valid","authenticate","username","password","subscribe","response","window","localStorage","setItem","navigate","errorMessage","preventDefault","navigateByUrl","backToStore","AuthModule","AuthGuard","loggedIn","MaterialModule","AuthService","datasource","getItem","clear","auth_token","Cart","itemCount","cartPrice","queues","product","quantity","queue","find","q","_id","undefined","push","CartLine","recalculate","forEach","price","Number","index","findIndex","splice","ModelModule","ModelResolver","dataSource","route","state","getProducts","length","Order","cart","shipped","name","city","address","zip","country","OrderRepository","orders","loaded","order","saveOrder","getOrders","loadOrders","updateOrder","o","deleteOrder","Product","category","description","size","image","ProductRepository","products","categories","searchedProducts","data","map","p","filter","c","array","indexOf","sort","saveProduct","updateProduct","deleteProduct","productName","searchProduct","PROTOCOL","PORT","RestDataSource","http","baseUrl","location","hostname","user","pass","post","email","get","getOptions","put","params","append","headers","Authorization","ShowImageDirective","el","renderer","imgCard","nativeElement","setAttribute","TokenInterceptorService","injector","next","authService","token","clone","setHeaders","getToken","handle","providedIn","AboutComponent","NgbdCarouselBasicModule","NgbdCarouselBasic","CartDetailComponent","CartSummaryComponent","CartWindowComponent","closed","emit","activeCartWindow","closeWindow","CheckoutComponent","repository","orderSent","submitted","states","FooterComponent","_companyLinks","_supportLinks","_offersLinks","getCategories","MainComponent","NavBarComponent","activeSideMenu","searchPanelVisibility","searchValue","selectedCategory","value","searchInput","showSearchPanel","queryParams","showCartWindow","toggleClass","ProductDetailComponent","activeRoute","snapshot","Object","assign","getProduct","addLine","addProductToCart","StoreComponent","productsPerPage","selectedPage","query","changeCategory","routerUrl","url","getSearchedProducts","pageIndex","slice","newCategory","newSize","changePageSize","StoreModule","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { StoreComponent } from './store/store.component';\r\nimport { CheckoutComponent } from './store/checkout/checkout.component';\r\nimport { CartDetailComponent } from './store/cartDetail/cartDetail.component';\r\nimport { ProductDetailComponent } from './store/productDetail/productDetail.component';\r\nimport { ModelResolver } from './model/model.resolver';\r\nimport { MainComponent } from './store/main/main.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { AboutComponent } from './store/about/about.component';\r\n\r\nconst childRoutes: Routes = [\r\n  { path: 'search', component: StoreComponent },\r\n  { path: 'product/:id', component: ProductDetailComponent, resolve: {model: ModelResolver}},\r\n  { path: 'cart', component: CartDetailComponent },\r\n  { path: 'category/:category', component: StoreComponent},\r\n  { path: 'checkout', component: CheckoutComponent },\r\n  { path: 'about', component: AboutComponent},\r\n  { path: '', component: StoreComponent},\r\n];\r\nconst routes: Routes = [\r\n  { path: 'auth', component: AuthComponent },\r\n  { path: 'admin', loadChildren:  () => import('src/app/admin/admin.module').then(mod => mod.AdminModule), canActivate: [AuthGuard]},\r\n  { path: 'store', component: MainComponent, children: childRoutes },\r\n  { path: '**', redirectTo: '/store' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    scrollPositionRestoration: 'top'\r\n  })],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'project-store';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { StoreModule } from './store/store.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { TokenInterceptorService } from './model/tokenInterceptor.service';\r\nimport { AuthModule } from './auth/auth.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    StoreModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    AuthModule,\r\n    NgbModule\r\n  ],\r\n  providers: [AuthGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptorService,\r\n      multi: true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\nimport { MaterialModule } from '../material.module';\r\n\r\n@Component({\r\n  templateUrl: 'auth.component.html',\r\n  styleUrls: ['auth.component.css'],\r\n})\r\nexport class AuthComponent {\r\n  public username: string;\r\n  public password: string;\r\n  public errorMessage: string;\r\n\r\n  constructor(private router: Router, private auth: AuthService) {}\r\n\r\n  authenticate(form: NgForm) {\r\n    if (form.valid) {\r\n      this.auth.authenticate(this.username, this.password).subscribe(\r\n        (response) => {\r\n          window.localStorage.setItem('token', response['token']);\r\n          this.router.navigate(['/admin/main']);\r\n        },\r\n        () => {\r\n          this.errorMessage = 'Uwierzytelnienie zakończyło się niepowodzeniem.';\r\n        }\r\n      );\r\n    } else {\r\n      this.errorMessage = 'Nieprawidłowe dane.';\r\n    }\r\n  }\r\n\r\n  backToStore(e) {\r\n    e.preventDefault();\r\n    this.router.navigateByUrl('/store');\r\n  }\r\n}\r\n","<div class=\"container container-panel d-flex justify-content-center align-items-center\">\r\n  <div>\r\n    <h2 class=\"text-center\">Zaloguj się</h2>\r\n    <div class=\"auth-panel px-3 py-2 mx-auto\">\r\n      <form novalidate #form=\"ngForm\" (ngSubmit)=\"authenticate(form)\" class=\"p-1\">\r\n          <mat-form-field class=\"mat-form\">\r\n            <mat-label>Nazwa użytkownika</mat-label>\r\n              <input class=\"input-auth\" matInput name=\"username\" [(ngModel)]=\"username\" required />\r\n          </mat-form-field>\r\n          <mat-form-field class=\"mat-form\">\r\n            <mat-label>Hasło</mat-label>\r\n              <input class=\"input-auth\" matInput type=\"password\" name=\"password\" [(ngModel)]=\"password\" required />\r\n          </mat-form-field>\r\n        <div class=\"text-danger\" *ngIf=\"errorMessage != null\">{{errorMessage}}</div>\r\n        <div class=\"mt-2\">  \r\n          <div class=\"row px-2 pt-2\">\r\n            <button class=\"w-100 bg-black text-white\" mat-button type=\"submit\">Zaloguj</button>\r\n          </div>\r\n          <div class=\"row px-2 pt-2\">\r\n            <button class=\"w-100 bg-white text-black\" mat-button (click)=\"backToStore($event)\">Powróć</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from '../material.module';\r\nimport { AuthComponent } from './auth.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, MaterialModule],\r\n  declarations: [ AuthComponent],\r\n})\r\nexport class AuthModule {}","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from '../model/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard {\r\n  constructor(private router: Router,\r\n              private auth: AuthService) {}\r\n\r\n  canActivate(): boolean {\r\n      if (this.auth.loggedIn()) {\r\n        return true;\r\n      } else {\r\n        this.router.navigate(['/auth']);\r\n        return false;\r\n      }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, MatButtonModule, MatGridListModule, MatListModule, MatRippleModule,\r\n             MatCardModule, MatBadgeModule, MatIconModule, MatFormFieldModule, MatInputModule,\r\n             MatSelectModule, MatSidenavModule, MatExpansionModule, MatTableModule, MatPaginatorModule, MatSortModule,\r\n             MatProgressSpinnerModule],\r\n  declarations: [\r\n  ],\r\n  exports: [ MatButtonModule, MatGridListModule, MatListModule, MatRippleModule, MatCardModule,\r\n             MatBadgeModule, MatIconModule, MatFormFieldModule, MatInputModule, MatSelectModule,\r\n             MatSidenavModule, MatExpansionModule, MatTableModule, MatPaginatorModule, MatSortModule, \r\n             MatProgressSpinnerModule]\r\n})\r\n\r\nexport class MaterialModule { }","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  constructor(private datasource: RestDataSource) {}\r\n\r\n  authenticate(username: string, password: string): Observable<boolean> {\r\n    return this.datasource.authenticate(username, password);\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.datasource.auth_token != null;\r\n  }\r\n\r\n  getToken(): string {\r\n    return localStorage.getItem('token');\r\n  }\r\n\r\n  loggedIn(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  clear(): void{\r\n    window.localStorage.clear();\r\n    this.datasource.auth_token = null;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Product } from './product.model';\r\n\r\n@Injectable()\r\nexport class Cart {\r\n  public itemCount = 0;\r\n  public cartPrice = 0;\r\n  public queues: CartLine[] = [];\r\n\r\n  addLine(product: Product, quantity: number = 1) {\r\n    const queue = this.queues.find(q => q.product._id === product._id);\r\n    if (queue !== undefined) {\r\n      queue.quantity += quantity;\r\n    } else {\r\n      this.queues.push(new CartLine(product, quantity));\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  private recalculate() {\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n    this.queues.forEach(q => {\r\n      this.itemCount += q.quantity;\r\n      this.cartPrice += (q.quantity * q.product.price);\r\n    });\r\n  }\r\n\r\n  updateQuantity(product: Product, quantity: number) {\r\n    const queue = this.queues.find(q => q.product._id === product._id);\r\n    if (queue !== undefined) {\r\n      queue.quantity = Number(quantity);\r\n    }\r\n    this.recalculate();\r\n  }\r\n\r\n  removeLine(id: number) {\r\n    const index = this.queues.findIndex(q => q.product.id === id);\r\n    this.queues.splice(index, 1);\r\n    this.recalculate();\r\n  }\r\n\r\n  clear() {\r\n    this.queues = [];\r\n    this.itemCount = 0;\r\n    this.cartPrice = 0;\r\n  }\r\n}\r\n\r\nexport class CartLine {\r\n  constructor(public product: Product, public quantity: number) {\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ProductRepository } from './product.repository';\r\nimport { Cart } from './cart.model';\r\nimport { Order } from './order.model';\r\nimport { OrderRepository } from './order.repository';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { AuthService } from './auth.service';\r\nimport { ModelResolver } from './model.resolver';\r\n\r\n@NgModule({\r\n  imports: [HttpClientModule],\r\n  providers: [ProductRepository, Cart, Order, OrderRepository,\r\n    AuthService, {provide: RestDataSource},\r\n    RestDataSource, ModelResolver]\r\n})\r\n\r\nexport class ModelModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ProductRepository } from './product.repository';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { Product } from './product.model';\r\n\r\n@Injectable()\r\nexport class ModelResolver {\r\n  constructor(\r\n    private model: ProductRepository,\r\n    private dataSource: RestDataSource\r\n  ) {}\r\n\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<Product[]> {\r\n    if (this.model.getProducts.length === 0) {\r\n      return this.dataSource.getProducts();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Cart } from './cart.model';\r\n\r\n@Injectable()\r\nexport class Order {\r\n  public _id?: number;\r\n  public id?: number;\r\n  public name: string;\r\n  public address: string;\r\n  public city: string;\r\n  public state: string;\r\n  public zip: string;\r\n  public country: string;\r\n  public shipped = false;\r\n\r\n  constructor(public cart: Cart) {}\r\n\r\n  clear() {\r\n    this.id = null;\r\n    this.name = this.city = this.address = null;\r\n    this.zip = this.state = this.country = null;\r\n    this.shipped = false;\r\n    this.cart.clear();\r\n  }\r\n}","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { RestDataSource } from './rest.datasource';\r\nimport { Order } from './order.model';\r\n\r\n@Injectable()\r\nexport class OrderRepository {\r\n  private orders: Order[] = [];\r\n  private loaded = false;\r\n\r\n  constructor(private dataSource: RestDataSource) {}\r\n\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.dataSource.saveOrder(order);\r\n  }\r\n\r\n  loadOrders() {\r\n    this.loaded = true;\r\n    this.dataSource.getOrders()\r\n      .subscribe(orders => this.orders = orders)\r\n  }\r\n\r\n  getOrders(): Order[] {\r\n    if (!this.loaded) {\r\n      this.loadOrders();\r\n    }\r\n    return this.orders;\r\n  }\r\n\r\n  updateOrder(order: Order) {\r\n    this.dataSource.updateOrder(order).subscribe(order => {\r\n      this.orders.splice(this.orders.\r\n        findIndex(o => o.id === order._id), 1, order);\r\n    });\r\n  }\r\n\r\n  deleteOrder(id: number) {\r\n    this.dataSource.deleteOrder(id).subscribe(order => {\r\n      this.orders.splice(this.orders.findIndex(o => id === o._id));\r\n    });\r\n  }\r\n}\r\n","export class Product {\r\n  constructor(\r\n    public _id?: string,\r\n    public id?: number,\r\n    public name?: string,\r\n    public category?: string,\r\n    public description?: string,\r\n    public size?: number,\r\n    public price?: number,\r\n    public image?: Array<string>\r\n    ) {}\r\n}","import { Injectable } from '@angular/core';\r\nimport { Product } from './product.model';\r\nimport { RestDataSource } from './rest.datasource';\r\n\r\n@Injectable()\r\nexport class ProductRepository {\r\n  private products: Product[] = [];\r\n  private categories: string[] = [];\r\n  private searchedProducts: [] = [];\r\n  constructor(private dataSource: RestDataSource) {\r\n    dataSource.getProducts().subscribe((data) => {\r\n      this.products = data;\r\n      this.categories = data\r\n        .map((p) => p.category)\r\n        .filter((c, index, array) => array.indexOf(c) == index)\r\n        .sort();\r\n    });\r\n  }\r\n\r\n  getProducts(category: string = null): Product[] {\r\n    return this.products.filter(\r\n      (p) => category == null || category == p.category\r\n    );\r\n  }\r\n\r\n  getProduct(id): Product {\r\n    return this.products.find((p) => p._id == id);\r\n  }\r\n\r\n  getCategories(): string[] {\r\n    return this.categories;\r\n  }\r\n\r\n  saveProduct(product: Product) {\r\n    if (product._id == null) {\r\n      this.dataSource\r\n        .saveProduct(product)\r\n        .subscribe((p) => this.products.push(p));\r\n    } else {\r\n      this.dataSource.updateProduct(product).subscribe((p) => {\r\n        this.products.splice(\r\n          this.products.findIndex((p) => p.id == product.id),\r\n          1,\r\n          product\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  deleteProduct(id: number) {\r\n    this.dataSource.deleteProduct(id).subscribe((p) => {\r\n      this.products.splice(\r\n        this.products.findIndex((p) => p.id == id),\r\n        1\r\n      );\r\n    });\r\n  }\r\n\r\n  searchProduct(productName: string) {\r\n    this.dataSource.searchProduct(productName).subscribe((p) => {\r\n      this.searchedProducts = p;\r\n    });\r\n  }\r\n\r\n  getSearchedProducts() {\r\n    return this.searchedProducts;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from './product.model';\r\nimport { Order } from './order.model';\r\n\r\nconst PROTOCOL = 'http';\r\nconst PORT = 3000;\r\n\r\n@Injectable()\r\nexport class RestDataSource {\r\n  baseUrl: string;\r\n  auth_token: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.baseUrl = `${PROTOCOL}://${location.hostname}:${PORT}/`;\r\n  }\r\n\r\n  authenticate(user: string, pass: string): Observable<boolean> {\r\n    return this.http.post<any>(this.baseUrl + 'auth', {\r\n      email: user,\r\n      password: pass,\r\n    });\r\n  }\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.baseUrl + 'api/products');\r\n  }\r\n\r\n  saveProduct(product: Product): Observable<Product> {\r\n    return this.http.post<Product>(\r\n      this.baseUrl + 'products',\r\n      product,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  updateProduct(product: Product): Observable<Product> {\r\n    return this.http.put<Product>(\r\n      `${this.baseUrl}api/products/${product._id}`,\r\n      product,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  deleteProduct(_id: number): Observable<Product> {\r\n    return this.http.delete<Product>(\r\n      `${this.baseUrl}api/products/${_id}`,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  updateOrder(order: Order): Observable<Order> {\r\n    return this.http.put<Order>(\r\n      `${this.baseUrl}api/orders/${order._id}`,\r\n      order,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<Order[]>(this.baseUrl + 'api/orders');\r\n  }\r\n\r\n  deleteOrder(_id: number): Observable<Order> {\r\n    return this.http.delete<Order>(\r\n      `${this.baseUrl}api/orders/${_id}`,\r\n      this.getOptions()\r\n    );\r\n  }\r\n\r\n  saveOrder(order: Order): Observable<Order> {\r\n    return this.http.post<Order>(this.baseUrl + 'api/orders', order);\r\n  }\r\n\r\n  searchProduct(productName: string): Observable<any> {\r\n    if (productName) {\r\n      let params = new HttpParams();\r\n      params = params.append('productName', productName);\r\n      return this.http.get<any[]>(`${this.baseUrl}store`, { params });\r\n    }\r\n  }\r\n\r\n  private getOptions() {\r\n    return {\r\n      headers: new HttpHeaders({\r\n        Authorization: `Bearer<${this.auth_token}>`,\r\n      }),\r\n    };\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, OnInit, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appShowImage]'\r\n})\r\nexport class ShowImageDirective implements OnInit {\r\n\r\n  @Input('appShowImage')\r\n  product: any;\r\n  path: string;\r\n\r\n  constructor(private el: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngOnInit(): void {\r\n    this.path = this.product.image[0];\r\n    const imgCard = this.el.nativeElement;\r\n    this.renderer.setAttribute(imgCard, 'src', `assets/${this.path}.jpg`);\r\n    }\r\n\r\n}\r\n","import { HttpInterceptor } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(req, next) {\n    let authService = this.injector.get(AuthService);\n    let token = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${authService.getToken()}`,\n      },\n    });\n    return next.handle(token);\n  }\n}\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'about.component.html',\r\n  styleUrls: ['about.component.css']\r\n})\r\n\r\nexport class AboutComponent {}\r\n","<div class=\"container container-wrapper\">\r\n    <h1 >About</h1>\r\n        <p class=\"text\">This site is build only for presentation purposes, so I didn't set any real information</p>\r\n    <h1>Lorem</h1>\r\n        <p class=\"text\">\r\n            \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\"\r\n        </p>\r\n    <h1>Ipsum</h1>\r\n        <p class=\"text\">\r\n            Suspendisse a pellentesque dui, non felis. Maecenas malesuada elit lectus felis, malesuada ultricies. Curabitur et ligula. Ut molestie a, ultricies porta urna. Vestibulum commodo volutpat a, convallis ac, laoreet enim. Phasellus fermentum in, dolor. Pellentesque facilisis. Nulla imperdiet sit amet magna. Vestibulum dapibus, mauris nec malesuada fames ac turpis velit, rhoncus eu, luctus et interdum adipiscing wisi. Aliquam erat ac ipsum. Integer aliquam purus. Quisque lorem tortor fringilla sed, vestibulum id, eleifend justo vel bibendum sapien massa ac turpis faucibus orci luctus non, consectetuer lobortis quis, varius in, purus. Integer ultrices posuere cubilia Curae, Nulla ipsum dolor lacus, suscipit adipiscing. Cum sociis natoque penatibus et ultrices volutpat. Nullam wisi ultricies a, gravida vitae, dapibus risus ante sodales lectus blandit eu, tempor diam pede cursus vitae, ultricies eu, faucibus quis, porttitor eros cursus lectus, pellentesque eget, bibendum a, gravida ullamcorper quam. Nullam viverra consectetuer. Quisque cursus et, porttitor risus. Aliquam sem. In hendrerit nulla quam nunc, accumsan congue. Lorem ipsum primis in nibh vel risus. Sed vel lectus. Ut sagittis, ipsum dolor quam.        </p>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NgbdCarouselBasic } from '../advertisement/carousel.basic';\r\n\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, NgbModule],\r\n  declarations: [NgbdCarouselBasic],\r\n  exports: [NgbdCarouselBasic],\r\n  bootstrap: [NgbdCarouselBasic]\r\n})\r\nexport class NgbdCarouselBasicModule {}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngbd-carousel-basic', \r\n  templateUrl: './carousel-basic.html',\r\n})\r\nexport class NgbdCarouselBasic {}","<ngb-carousel>\r\n    <ng-template ngbSlide>\r\n      <div class=\"max-height:600px\">\r\n        <img src=\"../../../assets/photo1_edit.jpg\"  class=\"w-100\" alt=\"Random first slide\">\r\n      </div>\r\n\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n      <div class=\"picsum-img-wrapper\">\r\n        <img src=\"../../../assets/photo6_edit.jpg\"  class=\"w-100\"  alt=\"Random second slide\">\r\n      </div>\r\n\r\n    </ng-template>\r\n    <ng-template ngbSlide>\r\n      <div class=\"picsum-img-wrapper\">\r\n        <img src=\"../../../assets/photo5_edit.jpg\"  class=\"w-100\" alt=\"Random third slide\">\r\n      </div>\r\n    </ng-template>\r\n  </ngb-carousel>","import { Component } from '@angular/core';\r\nimport { Cart } from '../../model/cart.model';\r\n\r\n@Component({\r\n  templateUrl: 'cartDetail.component.html',\r\n  styleUrls: ['cartDetail.component.css']\r\n})\r\n\r\nexport class CartDetailComponent {\r\n\r\n  constructor(public cart: Cart) {}\r\n\r\n}\r\n","\r\n<div class=\"container container-wrapper\">\r\n  <div class=\"row\">\r\n    \r\n    <div class=\"col-sm-12 col-md-8 \">\r\n      <div class=\"container\">\r\n        <h2 class=\"summary-title text-center mt-4\">Koszyk:\r\n          <span *ngIf=\"cart.itemCount > 0\"> {{ cart.itemCount }} produktów</span>\r\n          <span *ngIf=\"cart.itemCount === 0\">(pusty)</span>\r\n        </h2>\r\n      </div>\r\n     \r\n      <div class=\"row item-row my-3 mx-1 px-1 py-2\" *ngFor=\"let queue of cart.queues\">\r\n        <div class=\"col p-0 m-0\">\r\n          <img class=\"w-100\" [appShowImage]=\"queue.product\">\r\n        </div>\r\n        <div class=\"col-6\">\r\n          <p class=\"item-title\">{{queue.product.name}}</p>\r\n          <p class=\"item-subtitle\">{{queue.product.category}}</p>\r\n          <div class=\"item-details\">\r\n            <p>{{queue.product.description}}</p>\r\n            <p>Rozmiar:</p>\r\n            <p>Ilość sztuk:\r\n              <input min=\"1\" max=\"1\" type=\"number\" class=\"input-count\" [value]=\"queue.quantity\"\r\n                  (change)=\"cart.updateQuantity(queue.product, $event.target.value)\"/>\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\" col-sm col\">\r\n          <div class=\"item-price h-50 text-right p-1\">\r\n            <p>{{queue.product.price}} zł</p>\r\n          </div>\r\n          <div class=\"d-flex h-50 text-center\">\r\n            <button mat-raised-button class=\"button-cart w-100 text-white\" (click)=\"cart.removeLine(queue.product.id)\">Usuń</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col mt-4\">\r\n      <h2 class=\"text-center\">Podsumowanie</h2>\r\n      <app-cart-summary></app-cart-summary>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Cart } from '../../model/cart.model';\r\n\r\n@Component({\r\n  selector: 'app-cart-summary',\r\n  templateUrl: 'cartSummary.component.html',\r\n  styleUrls: ['cartSummary.component.css']\r\n})\r\n\r\nexport class CartSummaryComponent {\r\n  constructor(public cart: Cart) {}\r\n}\r\n","<div class=\"container summary-container\">\r\n  <div class=\"row summary-row\">\r\n    <div class=\"col-8\">Koszt produktów</div>\r\n    <div class=\"col-4\">129.90</div>\r\n  </div>\r\n  <div class=\"row summary-row\">\r\n    <div class=\"col-8\">Dostawa</div>\r\n    <div class=\"col-4\">0.00 zł</div>\r\n  </div>\r\n  <div class=\"row summary-row\">\r\n    <div class=\"col-8\"><p class=\"summary-text\">Suma</p></div>\r\n    <div class=\"col-4\"><p class=\"summary-text\">{{cart.cartPrice | currency:\" PLN \":\"zł \"\t}}</p></div>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"row summary-row\">\r\n      <button mat-raised-button class=\"button-cart-white\" routerLink=\"/store/checkout\" [disabled]=\"cart.queues.length === 0\">Do kasy</button>  \r\n    </div>\r\n    <div class=\"row summary-row-button\">\r\n      <button mat-raised-button class=\"button-cart\" routerLink=\"/store\">Kontynuuj zakupy</button>\r\n    </div>\r\n  </div>\r\n</div>","import { EventEmitter, Input } from '@angular/core';\r\nimport { Output } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { Cart } from '../../model/cart.model';\r\n\r\n@Component({\r\n  selector: 'app-cart-window',\r\n  templateUrl: 'cartWindow.component.html',\r\n  styleUrls: ['cartWindow.component.css']\r\n})\r\n\r\nexport class CartWindowComponent {\r\n  @Output()\r\n  closed: EventEmitter<string> = new EventEmitter<string>();\r\n  @Input()\r\n  activeCartWindow: boolean;\r\n\r\n  constructor(public cart: Cart) {}\r\n\r\n  closeWindow() {\r\n    this.closed.emit();\r\n  }\r\n  \r\n  getClassName() {\r\n    return {\r\n      'window-wrapper': this.activeCartWindow === true,\r\n      'cart-window': this.activeCartWindow === false\r\n    };\r\n  }\r\n}\r\n","\r\n  <div [ngClass]=\"getClassName()\" class=\"container\">\r\n  \r\n      <div class=\"row d-flex align-items-center justify-content-center\">\r\n        <h2 class=\"text-center mt-2\">Koszyk:\r\n          <span *ngIf=\"cart.itemCount === 0; else second\">(pusty)</span>\r\n          <ng-template #second>\r\n            <span *ngIf=\"cart.itemCount < 5; else third\"> {{ cart.itemCount }} produkty</span>\r\n          </ng-template>\r\n          <ng-template #third>\r\n            <span *ngIf=\"cart.itemCount >= 5\"> {{ cart.itemCount }} produktów</span>\r\n          </ng-template>\r\n        </h2>\r\n      </div>\r\n  \r\n      <div class=\"row container-wrapper overflow-auto\">\r\n        <div class=\"row mt-1 mx-1 bg-white h-auto p-1\" *ngFor=\"let queue of cart.queues\">\r\n          <div class=\"col-5 img-wrapper\">\r\n            <img class=\"wrap px-1 m-auto\" [appShowImage]=\"queue.product\">\r\n          </div>\r\n          <div class=\"col-7\">\r\n            <p class=\"item-title mt-1 m-0\">{{queue.product.name}}</p>\r\n            <p class=\"item-subtitle m-0\">{{queue.product.category}}</p>\r\n            <div class=\"item-details my-1\">\r\n              <p class=\"my-0 py-0\">Ilość sztuk: {{queue.quantity}}</p>\r\n              <p class=\"my-0\">Rozmiar: {{queue.product.size}}</p>\r\n              <p class=\"my-0 item-price\">{{queue.product.price}} zł</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row p-2 d-flex align-items-center justify-content-center\">\r\n        <button mat-raised-button class=\"button-cart w-100 relative\" routerLink=\"/store/cart\" (click)=\"closeWindow()\">Przejdź do koszyka</button>\r\n      </div>\r\n  </div>","import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Order } from '../../model/order.model';\r\nimport { OrderRepository } from '../../model/order.repository';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'checkout.component.html',\r\n  styleUrls: ['checkout.component.css']\r\n})\r\n\r\nexport class CheckoutComponent {\r\n  orderSent = false;\r\n  submitted = false;\r\n  states: string[] = [\r\n    'dolnośląskie',\r\n    'kujawsko-pomorskie',\r\n    'lubelskie',\r\n    'lubuskie',\r\n    'łódzkie',\r\n    'małopolskie',\r\n    'mazowieckie',\r\n    'opolskie',\r\n    'podarpackie',\r\n    'podlaskie',\r\n    'pomorskie',\r\n    'śląskie',\r\n    'świętokrzyskie',\r\n    'warmińsko-mazurskie',\r\n    'wielkopolskie',\r\n    'zachodniopomorskie'\r\n    ];\r\n\r\n  constructor(public repository: OrderRepository,\r\n              public order: Order) {\r\n              }\r\n\r\n  submitOrder(form: NgForm) {\r\n    this.submitted = true;\r\n    if (form.valid) {\r\n      this.repository.saveOrder(this.order).subscribe(() => {\r\n        this.order.clear();\r\n        this.orderSent = true;\r\n        this.submitted = false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","\r\n\r\n<div class=\"container container-form d-flex align-items-center justify-content-center\">\r\n\r\n  <div *ngIf=\"orderSent\" class=\"m-a-1 text-center\">\r\n    <h2>Dziękujemy!</h2>\r\n    <p>Zamówienie zostało złożone.</p>\r\n    <p>Produkty zostaną wysłane jak najszybciej.</p>\r\n    <button class=\"button-black\" mat-button routerLink=\"/store\">Powrót do sklepu</button>\r\n  </div>\r\n  <div *ngIf=\"!orderSent\">\r\n    <h2 class=\"text-center\" >Dane do wysyłki</h2>\r\n\r\n    <form #form=\"ngForm\" novalidate (ngSubmit)=\"submitOrder(form)\" class=\"form w-100\">\r\n      \r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Imię i nazwisko</mat-label>\r\n        <input class=\"input\" matInput  #name='ngModel' name=\"name\" [(ngModel)]=\"order.name\" required />\r\n        <mat-error *ngIf=\"submitted\" class=\"text-danger\">\r\n          Proszę podać imię i nazwisko.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Adres</mat-label>\r\n        <input class=\"input\" matInput #address=\"ngModel\" name=\"address\" [(ngModel)]=\"order.address\" required />\r\n        <mat-error *ngIf=\"submitted && address.invalid\" class=\"text-danger\">\r\n          Proszę podać adres.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Miejscowość</mat-label>\r\n        <input matInput class=\"input\" #city=\"ngModel\" name=\"city\" [(ngModel)]=\"order.city\" required/>\r\n        <mat-error *ngIf=\"submitted && city.invalid\" class=\"text-danger\">\r\n          Proszę podać miejscowość.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Województwo</mat-label>\r\n        <mat-select #state=\"ngModel\" name=\"state\" [(ngModel)]=\"order.state\" required >\r\n          <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"submitted && state.invalid\" class=\"text-danger\">\r\n          Proszę podać województwo.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Kod pocztowy</mat-label>\r\n        <input class=\"input\" matInput #zip=\"ngModel\" name=\"zip\" [(ngModel)]=\"order.zip\" appZipPattern=\"\\d{2}-\\d{3}\" required />\r\n        <mat-error *ngIf=\"submitted && zip.invalid\" class=\"text-danger\">\r\n          Proszę podać kod pocztowy.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"w-100\">\r\n        <mat-label>Kraj</mat-label>\r\n        <input class=\"input\" matInput name=\"country\" [(ngModel)]=\"order.country\" required />\r\n        <mat-error *ngIf=\"submitted\" class=\"text-danger\">\r\n          Proszę podać kraj.\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <div class=\"container-button\">  \r\n        <div class=\"row row-button\">\r\n          <button class=\"button-white w-100\" mat-button type=\"submit\">Złóż zamówienie</button>\r\n        </div>\r\n        <div class=\"row row-button\">\r\n          <button class=\"button-black w-100\" mat-button routerLink=\"/\">Powrót</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { ProductRepository } from '../../model/product.repository';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: 'footer.component.html',\r\n  styleUrls: ['footer.component.css']\r\n})\r\n\r\nexport class FooterComponent {\r\n\r\n  constructor(private repository: ProductRepository) {}\r\n\r\n  get categories(): string[] {\r\n    return this.repository.getCategories();\r\n  }\r\n\r\n  private _companyLinks: Array<string> = [\r\n    'O nas',\r\n    'Kariera',\r\n    'Regulamin',\r\n    'Polityka prywatności'\r\n  ];\r\n\r\n  private _supportLinks: Array<string> = [\r\n    'Pomoc',\r\n    'Dostawa',\r\n    'Tabele rozmiarów',\r\n    'Zwroty'\r\n  ];\r\n\r\n  private _offersLinks: Array<string> = [\r\n    'Bestsellery',\r\n    'Promocje',\r\n    'Kody rabatowe',\r\n  ];\r\n\r\n  public get companyLinks(): Array<string> {\r\n    return this._companyLinks;\r\n  }\r\n\r\n  public get supportLinks(): Array<string> {\r\n    return this._supportLinks;\r\n  }\r\n\r\n  public get offersLinks(): Array<string> {\r\n    return this._offersLinks;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}","<div class=\"grid-container w-100\">\r\n  \r\n  <div class=\"grid-item\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h2 matLine>PRODUKTY</h2>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-nav-list>\r\n        <a routerLink=\"/store/about\">\r\n          <mat-list-item class=\"link\" *ngFor=\"let link of categories\"> {{ link }} </mat-list-item>\r\n        </a>\r\n      </mat-nav-list>\r\n    </mat-expansion-panel>\r\n      \r\n    <mat-nav-list class=\"forDesktop\">\r\n      <h2 matLine>PRODUKTY</h2>\r\n      <a mat-list-item class=\"link\" *ngFor=\"let link of categories\" routerLink=\"/store/about\"> {{ link }} </a>\r\n    </mat-nav-list>\r\n  </div>\r\n\r\n  <div class=\"grid-item\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h2 matLine>O FIRMIE</h2>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-nav-list>\r\n          <a mat-list-item class=\"link\" *ngFor=\"let link of companyLinks\" routerLink=\"/store/about\" >{{link}} </a>\r\n      </mat-nav-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-nav-list class=\"forDesktop\">\r\n      <h2 matLine>O FIRMIE</h2>\r\n      <a mat-list-item *ngFor=\"let link of companyLinks\" routerLink=\"/store/about\"> {{ link }} </a>\r\n    </mat-nav-list>\r\n  </div>\r\n\r\n  <div class=\"grid-item\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h2 matLine>WSPARCIE</h2>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-nav-list>\r\n          <a mat-list-item class=\"link\" *ngFor=\"let link of supportLinks\">{{link}}</a>\r\n      </mat-nav-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-nav-list class=\"forDesktop\">\r\n      <h2 matLine>WSPARCIE</h2>\r\n      <a mat-list-item  *ngFor=\"let link of supportLinks\" routerLink=\"/store/about\"> {{ link }} </a>\r\n    </mat-nav-list>\r\n  </div>\r\n\r\n  <div class=\"grid-item\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          <h2 matLine>OFERTY SPECJALNE</h2>\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <mat-nav-list>\r\n          <mat-list-item class=\"link\" *ngFor=\"let link of offersLinks\" routerLink=\"/store/about\"> {{ link }} </mat-list-item>\r\n        </mat-nav-list>\r\n    </mat-expansion-panel>\r\n\r\n    <mat-nav-list class=\"forDesktop\">\r\n      <h2 matLine>OFERTY SPECJALNE</h2>\r\n      <a mat-list-item  *ngFor=\"let link of offersLinks\" routerLink=\"/store/about\"> {{ link }} </a>\r\n    </mat-nav-list>\r\n  </div>\r\n\r\n</div>\r\n<div class=\"footer\"> Projekt</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: 'main.component.html',\r\n  styleUrls: ['main.component.css'],\r\n})\r\nexport class MainComponent {}\r\n","<app-navbar></app-navbar>\r\n<router-outlet class=\"space\"></router-outlet>\r\n<app-footer></app-footer>\r\n","import { ElementRef, ViewChild } from '@angular/core';\r\nimport { Component } from '@angular/core';\r\nimport { Cart } from '../../model/cart.model';\r\nimport { ProductRepository } from '../../model/product.repository';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: 'navbar.component.html',\r\n  styleUrls: ['navbar.component.css']\r\n})\r\n\r\nexport class NavBarComponent {\r\n\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  public activeSideMenu = false;\r\n  public activeCartWindow = false;\r\n  private searchPanelVisibility = false;\r\n  public searchValue = '';\r\n  public selectedCategory = null;\r\n  constructor(public cart: Cart, public repository: ProductRepository, private router: Router) {}\r\n\r\n  showSearchPanel() {\r\n    this.searchPanelVisibility = !this.searchPanelVisibility;\r\n  }\r\n\r\n  getClassName() {\r\n    return {\r\n      'search-panel': this.searchPanelVisibility === true,\r\n      'search-panel-hidden': this.searchPanelVisibility === false\r\n    };\r\n  }\r\n\r\n  toggleClass() {\r\n    this.activeSideMenu = !this.activeSideMenu;\r\n  }\r\n\r\n  showCartWindow() {\r\n    this.activeCartWindow = !this.activeCartWindow;\r\n  }\r\n\r\n  searchProduct(value: string): any{\r\n    this.searchInput.nativeElement.value = '';\r\n    this.showSearchPanel();\r\n    this.router.navigate(['/store/search'], { queryParams: {productName: value}});\r\n  }\r\n\r\n  get categories(): string[] {\r\n    return this.repository.getCategories();\r\n  }\r\n\r\n}\r\n","<div class=\"nav-wrapper d-block w-100 fixed-top\">\r\n  <nav class=\"d-flex align-items-stretch bg-white\">\r\n    <div class=\"brand-logo d-flex align-items-center ml-2\" >\r\n      <span [routerLink]=\"['store']\">MS SHOP</span>\r\n    </div>\r\n    <div class=\"links-container m-2 p-1 text-center font-medium\">\r\n      <ul class=\"nav-list\">\r\n        <li *ngFor=\"let category of categories\">\r\n          <a class=\"links-categories\" [routerLink]=\"['category', category]\">{{category}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"icon-container m-2 p-1 text-center font-medium\">\r\n      <a class=\"nav-icon\" (click)=\"showSearchPanel()\">\r\n        <mat-icon class=\"material-icons\">\r\n          search\r\n        </mat-icon> \r\n      </a>\r\n      <a class=\"nav-icon\"  (click)=\"showCartWindow()\">\r\n        <mat-icon class=\"material-icons\" [matBadge]=\"cart.itemCount\" matBadgeColor=\"warn\">\r\n          shopping_cart\r\n        </mat-icon> \r\n      </a>\r\n      <a class=\"nav-icon icon-for-desktop\" routerLink=\"/auth\">\r\n        <mat-icon class=\"material-icons\">\r\n          admin_panel_settings\r\n        </mat-icon> \r\n      </a>\r\n      <a class=\"nav-icon icon-for-mobile\" (click)=\"toggleClass()\"  >\r\n        <mat-icon class=\"material-icons\">\r\n          menu\r\n        </mat-icon> \r\n      </a>\r\n    </div>\r\n  </nav>\r\n\r\n  <div [ngClass]=\"getClassName()\">\r\n    <div class=\"search-container\">\r\n      <input #searchbox class=\"search-input\" placeholder=\"Szukaj produktu...\" #searchInput\r\n              [value]=\"searchValue\" (keydown.enter)=\"searchProduct(searchInput.value)\">\r\n          <span class=\"material-icons\">search</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div  [class.sidemenu-active]=\"activeSideMenu\" class=\"sidemenu h-100 hide overflow-hidden\">\r\n  <mat-list class=\"mt-6\">\r\n    <div mat-subheader>Kategorie</div>\r\n    <mat-list-item  class=\"category-link ml-2\" [routerLink]=\"['category', category]\" (click)=\"toggleClass()\" *ngFor=\"let category of categories\">\r\n      {{category}}\r\n    </mat-list-item>\r\n    <mat-divider></mat-divider>\r\n    <div mat-subheader>Administracja</div>\r\n    <mat-list-item class=\"category-link ml-2\" routerLink=\"/auth\">\r\n      Zaloguj \r\n    </mat-list-item>\r\n  </mat-list>\r\n</div>\r\n<div>\r\n  <app-cart-window [activeCartWindow]=\"activeCartWindow\" (closed)=\"showCartWindow()\"></app-cart-window>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Product } from '../../model/product.model';\r\nimport { ProductRepository } from '../../model/product.repository';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Cart } from '../../model/cart.model';\r\n\r\n@Component({\r\n  selector: 'app-product-detail',\r\n  templateUrl: 'productDetail.component.html',\r\n  styleUrls: ['productDetail.component.css']\r\n})\r\n\r\nexport class ProductDetailComponent {\r\n  product: Product = new Product();\r\n\r\n  constructor(private repository: ProductRepository, activeRoute: ActivatedRoute,\r\n              private cart: Cart) {\r\n    const id = activeRoute.snapshot.params.id;\r\n    if (id !== null) {\r\n      Object.assign(this.product, repository.getProduct(id));\r\n    }\r\n  }\r\n\r\n  addProductToCart(product: Product) {\r\n    this.cart.addLine(product);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    \r\n    <div class=\"col-sm-12 col-md-7\">\r\n      <div class=\"gallery\">\r\n        <div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\r\n        <div class=\"carousel-inner\">  \r\n          <div class=\"carousel-item active\" data-interval=\"99000\">\r\n            <img style=\"width: 100%\"  class=\"main-img\" src=\"assets/{{product.image[0]}}.jpg\" alt=\"...\">\r\n          </div>\r\n          <ng-container *ngFor=\"let image of product.image | slice: 1\">\r\n            <div class=\"carousel-item\" data-interval=\"99000\">\r\n              <img style=\"width: 100%\" src=\"assets/{{image}}.jpg\" class=\"main-img\" alt=\"...\">\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n        <div class=\"small-gallery\">\r\n          <ng-container *ngFor=\"let image of product.image\">\r\n            <img class=\"small-img\" src=\"assets/{{image}}.jpg\">\r\n          </ng-container>  \r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"col-sm-12 col-md-5\">\r\n      <div class=\"container-product-info\">\r\n        <div class=\"product-info product-name\">\r\n          <p>{{product.name}}</p>\r\n        </div>\r\n        <div class=\"product-info product-category\">\r\n          <p>{{product.category}}</p>\r\n        </div>\r\n        <div class=\"product-info product-price\">\r\n          <p>{{product.price}} zł</p>\r\n        </div>\r\n        <div class=\"product-info product-description\">\r\n          <p>{{product.description}}</p>\r\n        </div>\r\n        <div class=\"product-info product-description\">\r\n          <p>Rozmiar: {{product.size}}</p>\r\n        </div>\r\n        <div class=\"product-info product-size-select\">\r\n\r\n        </div>\r\n        <div class=\"product-info button-add-to-cart\">\r\n          <button mat-raised-button class=\"button-cart text-white\" (click)=\"addProductToCart(product)\">Dodaj do koszyka</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Product } from '../model/product.model';\r\nimport { ProductRepository } from '../model/product.repository';\r\nimport { Cart } from '../model/cart.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-store',\r\n  templateUrl: 'store.component.html',\r\n  styleUrls: ['store.component.css']\r\n})\r\n\r\nexport class StoreComponent {\r\n  public selectedCategory = null;\r\n  public productsPerPage = 15;\r\n  public selectedPage = 1;\r\n  private query;\r\n  public routerUrl: string;\r\n  \r\n  constructor(private repository: ProductRepository, private cart: Cart, private router: Router, activeRoute: ActivatedRoute) {\r\n    activeRoute.queryParams.subscribe(query => {\r\n      if (query.productName) {\r\n        this.query = query.productName;\r\n        this.repository.searchProduct(this.query);\r\n      }\r\n    });\r\n    activeRoute.params.subscribe(params => {\r\n      if (params.category) {\r\n        this.selectedCategory = params.category;\r\n        this.changeCategory(this.selectedCategory);\r\n      }\r\n    });\r\n    this.routerUrl = this.router.url;\r\n    }\r\n\r\n  getproducts(): Product[] {\r\n    if (this.query != undefined) {\r\n      return this.repository.getSearchedProducts();\r\n    } else {\r\n      const pageIndex = (this.selectedPage - 1) * this.productsPerPage;\r\n      return this.repository.getProducts(this.selectedCategory)\r\n      .slice(pageIndex, pageIndex + this.productsPerPage);\r\n    }\r\n  }\r\n\r\n  get categories(): string[] {\r\n    return this.repository.getCategories();\r\n  }\r\n\r\n  changeCategory(newCategory?: string) {\r\n    this.selectedCategory = newCategory;\r\n  }\r\n\r\n  changePageSize(newSize: number) {\r\n    this.productsPerPage = Number(newSize);\r\n  }\r\n\r\n  addProductToCart(product: Product) {\r\n    this.cart.addLine(product);\r\n  }\r\n\r\n  showCart() {\r\n    this.router.navigateByUrl('/cart');\r\n  }\r\n\r\n  showProduct(id: string) {\r\n    this.router.navigateByUrl(`store/product/${id}`);\r\n  }\r\n\r\n}\r\n","<ngbd-carousel-basic *ngIf=\"routerUrl == '/store'\" class=\"carousel mt-3\"></ngbd-carousel-basic>\r\n<div class=\"container my-5\">\r\n  <div class=\"card-container\">\r\n    <mat-card *ngFor=\"let product of getproducts()\" class=\"example-card mx-1 my-2\">\r\n      <div class=\"img-wrapper\">\r\n        <img [appShowImage]=\"product\" mat-card-image (click)=\"showProduct(product._id)\"/>\r\n      </div>\r\n      <mat-card-header>\r\n        <mat-card-title>{{ product.name }}</mat-card-title>\r\n        <mat-card-subtitle>{{ product.category }}</mat-card-subtitle>\r\n        <h4 class=\"price-container\">{{ product.price }} zł</h4>\r\n      </mat-card-header>\r\n      <mat-card-actions>\r\n        <button  mat-raised-button class=\"button-cart\" (click)=\"addProductToCart(product)\">Do koszyka</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  </div>\r\n\r\n  <div class=\"row p-2 mr-3 float-right\">\r\n    <select (change)=\"changePageSize($event.target.value)\" class=\"p-1\">\r\n      <option value=\"5\">5 na stronie</option>\r\n      <option value=\"10\">10 na stronie</option>\r\n      <option value=\"15\" selected>15 na stronie</option>\r\n    </select>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ModelModule } from '../model/model.module';\r\nimport { StoreComponent } from './store.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CartSummaryComponent } from './cartSummary/cartSummary.component';\r\nimport { CartDetailComponent } from './cartDetail/cartDetail.component';\r\nimport { CheckoutComponent } from './checkout/checkout.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { NavBarComponent } from './navbar/navbar.component';\r\nimport { ShowImageDirective } from '../model/showImage.directive';\r\nimport { ProductDetailComponent } from './productDetail/productDetail.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { NgbdCarouselBasicModule } from './advertisement/carousel-basic.module';\r\nimport { CartWindowComponent } from './cartWindow/cartWindow.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [ModelModule, BrowserModule, FormsModule, RouterModule, MaterialModule, NgbdCarouselBasicModule],\r\n  declarations: [\r\n    StoreComponent,\r\n    CartSummaryComponent,\r\n    CartDetailComponent,\r\n    CheckoutComponent,\r\n    FooterComponent,\r\n    NavBarComponent,\r\n    ShowImageDirective,\r\n    ProductDetailComponent,\r\n    MainComponent,\r\n    CartWindowComponent\r\n  ],\r\n  exports: [MainComponent]\r\n})\r\n\r\nexport class StoreModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}