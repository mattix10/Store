{"version":3,"sources":["webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/admin.module.ts","webpack:///src/app/admin/productEditor/productEditor.component.ts","webpack:///src/app/admin/productEditor/productEditor.component.html","webpack:///src/app/admin/sidenav/sidenav.component.ts","webpack:///src/app/admin/sidenav/sidenav.component.html","webpack:///src/app/admin/tables/orderTable.component.ts","webpack:///src/app/admin/tables/orderTable.component.html","webpack:///src/app/admin/tables/productTable.component.ts","webpack:///src/app/admin/tables/productTable.component.html"],"names":["AdminComponent","templateUrl","routing","forChild","path","component","children","redirectTo","AdminModule","imports","declarations","ProductEditorComponent","repository","openModalEvent","openModal","emit","saveProduct","choosenProduct","close","selector","styleUrls","SideNavComponent","auth","router","toggle","clear","navigateByUrl","toggleClass","logout","OrderTableComponent","restDataSource","displayedColumns","refresh","getOrders","subscribe","res","orders","dataSource","paginator","sort","id","deleteOrder","product","name","selectedProduct","ProductTableComponent","getProducts","products","find","p","_id","deleteProduct","closeModal"],"mappings":"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","file":"src-app-admin-admin-module-es5.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'admin.component.html',\r\n})\r\nexport class AdminComponent {}\r\n","<app-sidenav ></app-sidenav>\r\n<router-outlet ></router-outlet>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AdminComponent } from './admin.component';\r\nimport { ProductTableComponent } from './tables/productTable.component';\r\nimport { ProductEditorComponent } from './productEditor/productEditor.component';\r\nimport { OrderTableComponent } from './tables/orderTable.component';\r\nimport { MaterialModule } from '../material.module';\r\nimport { SideNavComponent } from './sidenav/sidenav.component';\r\nconst routing = RouterModule.forChild([\r\n  { path: 'main', component: AdminComponent,\r\n    children: [\r\n      { path: 'products/:mode/:id', component: ProductEditorComponent },\r\n      { path: 'products/:mode', component: ProductEditorComponent },\r\n      { path: 'products', component: ProductTableComponent },\r\n      { path: 'orders', component: OrderTableComponent },\r\n      { path: '**', redirectTo: 'orders' }\r\n    ] },\r\n  { path: '**', redirectTo: 'auth' }\r\n]);\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule, routing, MaterialModule],\r\n  declarations: [ AdminComponent, ProductTableComponent,\r\n    ProductEditorComponent, OrderTableComponent, SideNavComponent],\r\n})\r\nexport class AdminModule {}","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ProductRepository } from '../../model/product.repository';\r\n\r\n@Component({\r\n  selector: 'app-productEditor',\r\n  templateUrl: 'productEditor.component.html',\r\n  styleUrls: ['productEditor.component.css'],\r\n})\r\nexport class ProductEditorComponent {\r\n  @Input() choosenProduct;\r\n  @Input() openModal;\r\n  @Output() openModalEvent = new EventEmitter();\r\n\r\n  constructor(private repository: ProductRepository) {}\r\n\r\n  close() {\r\n    this.openModal = false;\r\n    this.openModalEvent.emit(this.openModal);\r\n  }\r\n\r\n  save() {\r\n    this.repository.saveProduct(this.choosenProduct);\r\n    this.close();\r\n  }\r\n}\r\n","<div class=\"modal d-none w-100 h-100 fixed overflow-auto\" [class.d-block]=\"openModal==true\" [class.d-none]=\"openModal==false\">\r\n  <div class=\"modal-content relative m-auto p-3\">\r\n    <h1 class=\"text-center \">Edytuj produkt</h1>\r\n\r\n    <div *ngIf=\"choosenProduct != undefined\" class=\"d-md-flex\">\r\n      <div class=\"d-flex img-wrapper  mx-auto\">\r\n        <img class=\"w-100 m-auto\" src=\"assets/{{choosenProduct.image[0]}}.jpg\">\r\n      </div>\r\n      \r\n      <div class=\"d-flex w-100\">\r\n      <form novalidate #form=\"ngForm\" (ngSubmit)=\"save()\" class=\"w-100\">\r\n        <div class=\"form-group\">\r\n          <label>Produkt</label>\r\n          <input class=\"form-control\" name=\"name\" [(ngModel)]=\"choosenProduct.name\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Kategoria</label>\r\n          <input class=\"form-control\" name=\"category\" [(ngModel)]=\"choosenProduct.category\" />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Opis</label>\r\n          <textarea class=\"form-control\" name=\"description\" [(ngModel)]=\"choosenProduct.description\"></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Cena</label>\r\n          <input class=\"form-control\" name=\"price\" [(ngModel)]=\"choosenProduct.price\" />\r\n        </div>\r\n\r\n        <div class=\"d-flex justify-content-between \">\r\n          <button type=\"reset\" class=\"w-40 text-black mr-1\" mat-button routerLink=\"/admin/main/products\" (click)=\"close()\">\r\n            Anuluj\r\n          </button>\r\n          <button type=\"submit\" class=\"w-40 bg-black text-white\" mat-button (click)=\"save()\">Zapisz</button>\r\n        </div>\r\n\r\n      </form>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../model/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: 'sidenav.component.html',\r\n  styleUrls: ['sidenav.component.css'],\r\n})\r\nexport class SideNavComponent {\r\n  public toggle: boolean = false;\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  logout() {\r\n    this.auth.clear();\r\n    this.router.navigateByUrl('/');\r\n  }\r\n\r\n  toggleClass() {\r\n    this.toggle = !this.toggle;\r\n  }\r\n}\r\n","<div class=\"bar w-100 fixed-top\">\r\n  <div class=\"icon-container\">\r\n    <a class=\"icon-for-mobile\" (click)=\"toggleClass()\"  >\r\n      <mat-icon class=\"material-icons d-block d-sm-none  float-right mt-2 mr-2\">\r\n        menu\r\n      </mat-icon> \r\n    </a>\r\n  </div>\r\n</div>\r\n<div class=\"sidenav h-100 fixed-top\" [ngClass]=\"toggle ? 'show' : 'hide'\">\r\n  <div class=\"brand-logo d-flex align-items-center justify-content-center ml-2 py-3 w-100\"  >\r\n    <span>MS SHOP</span>\r\n  </div>\r\n  <div matRipple class=\"d-flex links align-items-center justify-content-center py-sm-3 py-2 w-100\" routerLink=\"/admin/main/products\" (click)=\"toggleClass()\">\r\n    <span >Produkty</span>\r\n  </div>\r\n  <div matRipple class=\"d-flex links align-items-center justify-content-center py-sm-3 py-2 w-100\" routerLink=\"/admin/main/orders\" (click)=\"toggleClass()\">\r\n    <span>Zamówienia</span>\r\n  </div>\r\n  <div matRipple class=\"d-flex links align-items-center justify-content-center py-sm-3 py-2 w-100\" (click)=\"logout()\">\r\n    <span>Wyloguj</span>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OrderRepository } from '../../model/order.repository';\r\nimport { Order } from '../../model/order.model';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { RestDataSource } from '../../model/rest.datasource';\r\n\r\n@Component({\r\n  templateUrl: 'orderTable.component.html',\r\n  styleUrls: ['table.component.css'],\r\n})\r\nexport class OrderTableComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) tableReference: MatTable<any>;\r\n\r\n  public dataSource: any;\r\n  public selectedProduct: object;\r\n  public orders: any[];\r\n  public displayedColumns: string[] = [\r\n    'name',\r\n    'state',\r\n    'zip',\r\n    'address',\r\n    'cart.queues[0].product.name',\r\n    'cart.queues[0].product.itemCount',\r\n    'cart.queues[0].product.price',\r\n    'cart.itemCount',\r\n    'cart.cartPrice',\r\n    'id',\r\n  ];\r\n\r\n  constructor(\r\n    private repository: OrderRepository,\r\n    private restDataSource: RestDataSource\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    this.restDataSource.getOrders().subscribe((res) => {\r\n      this.orders = res;\r\n      this.dataSource = new MatTableDataSource<any>(this.orders);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  delete(id: number) {\r\n    this.repository.deleteOrder(id);\r\n    this.refresh();\r\n  }\r\n\r\n  getSelected(product): any {\r\n    return product.name == this.selectedProduct;\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8 \">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort >\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th  mat-header-cell *matHeaderCellDef mat-sort-header> Imię i nazwisko </th>\r\n      <td  mat-cell *matCellDef=\"let row\"> {{row.name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"state\">\r\n      <th  mat-header-cell *matHeaderCellDef mat-sort-header> Miejscowość </th>\r\n      <td  mat-cell *matCellDef=\"let row\"  > {{row.state}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"zip\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Kod pocztowy</th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.zip\" > {{row.zip}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"address\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Adres</th>\r\n      <td mat-cell *matCellDef=\"let row\" [style.color]=\"row.address\" > {{row.address}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cart.queues[0].product.name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Produkty</th>\r\n      <td mat-cell *matCellDef=\"let dataSource\" >\r\n        <ng-container *ngFor=\"let el of dataSource.cart.queues\">\r\n          <p>{{ el.product.name }}</p>\r\n      </ng-container>\r\n    </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cart.queues[0].product.itemCount\">\r\n      <th mat-header-cell *matHeaderCellDef> Ilość sztuk</th>\r\n      <td mat-cell *matCellDef=\"let dataSource\">\r\n        <ng-container *ngFor=\"let el of dataSource.cart.queues\">\r\n          <p>{{ el.quantity}}</p>\r\n      </ng-container>\r\n    </td>\r\n    </ng-container>\r\n    \r\n    <ng-container matColumnDef=\"cart.queues[0].product.price\">\r\n      <th mat-header-cell *matHeaderCellDef > Cena za szt. (zł)</th>\r\n      <td mat-cell *matCellDef=\"let dataSource\">\r\n        <ng-container *ngFor=\"let el of dataSource.cart.queues\">\r\n          <p>{{ el.product.price }}</p>\r\n      </ng-container>\r\n    </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cart.cartPrice\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Suma (zł)</th>\r\n      <td mat-cell *matCellDef=\"let row\"> {{row.cart.cartPrice}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"cart.itemCount\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Suma (szt.)</th>\r\n      <td mat-cell *matCellDef=\"let row\"  > {{row.cart.itemCount}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"  [class.marked]=\"getSelected(row)\" (click)=\"selectedProduct=row.name\" ></tr>\r\n\r\n    <ng-container matColumnDef=\"id\" >\r\n      <th mat-header-cell *matHeaderCellDef> </th>\r\n      <td mat-cell *matCellDef=\"let row\"> \r\n       <button mat-button class=\"btn-action\">Zrealizuj</button><br>\r\n        <button mat-button class=\"btn-delete\" (click)=\"delete(row._id)\">Usuń</button>\r\n      </td>\r\n    </ng-container>\r\n\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20, 25, 50, 100]\"></mat-paginator>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ProductRepository } from '../../model/product.repository';\r\nimport { Product } from '../../model/product.model';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\r\nimport { RestDataSource } from '../../model/rest.datasource';\r\n\r\n@Component({\r\n  templateUrl: 'productTable.component.html',\r\n  styleUrls: ['table.component.css'],\r\n})\r\nexport class ProductTableComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) tableReference: MatTable<any>;\r\n\r\n  public dataSource: any;\r\n  public pageSizeOptions: number;\r\n  public products: Array<any>;\r\n  public displayedColumns: string[] = [\r\n    'name',\r\n    'category',\r\n    'description',\r\n    'price',\r\n    'id',\r\n  ];\r\n  public selectedProduct;\r\n  public openModal = false;\r\n  public choosenProduct;\r\n\r\n  constructor(\r\n    private repository: ProductRepository,\r\n    private restDataSource: RestDataSource\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    this.restDataSource.getProducts().subscribe((res) => {\r\n      this.products = res;\r\n      this.dataSource = new MatTableDataSource<any>(this.products);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    });\r\n  }\r\n\r\n  closeModal(openModal: boolean): void {\r\n    this.openModal = openModal;\r\n    this.refresh();\r\n  }\r\n\r\n  editProduct(id: string): void {\r\n    this.openModal = true;\r\n    this.choosenProduct = this.products.find((p) => p._id == id);\r\n  }\r\n\r\n  getProduct(id: string): Product {\r\n    return this.products.find((p) => p._id == id);\r\n  }\r\n\r\n  getProducts(): Product[] {\r\n    return this.repository.getProducts();\r\n  }\r\n\r\n  deleteProduct(id: number): void {\r\n    this.repository.deleteProduct(id);\r\n    this.refresh();\r\n  }\r\n\r\n  getSelected(product: Product): boolean {\r\n    return product.name == this.selectedProduct;\r\n  }\r\n}\r\n","<app-productEditor [choosenProduct]=\"choosenProduct\" [openModal]=\"openModal\" (openModalEvent)=\"closeModal($event)\"></app-productEditor>\r\n<div class=\"mat-elevation-z8\">\r\n  <table mat-table [dataSource]=\"dataSource\" matSort >\r\n\r\n    <ng-container matColumnDef=\"name\">\r\n      <th  mat-header-cell *matHeaderCellDef mat-sort-header> Nazwa </th>\r\n      <td  mat-cell *matCellDef=\"let row\"  > {{row.name}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"category\">\r\n      <th  mat-header-cell *matHeaderCellDef mat-sort-header> Kategoria </th>\r\n      <td  mat-cell *matCellDef=\"let row\" > {{row.category}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"description\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Opis</th>\r\n      <td mat-cell *matCellDef=\"let row\" > {{row.description}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"price\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Cena</th>\r\n      <td mat-cell *matCellDef=\"let row\" > {{row.price}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selectedProduct=row.name\" [class.marked]=\"getSelected(row)\"></tr>\r\n\r\n    <ng-container matColumnDef=\"id\" >\r\n      <th mat-header-cell *matHeaderCellDef ></th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        <button mat-button (click)=\"editProduct(row._id)\">Edytuj</button> \r\n        <button mat-button (click)=\"deleteProduct(row._id)\">Usuń</button> \r\n      </td>\r\n    </ng-container>\r\n\r\n  </table>\r\n\r\n  <mat-paginator [pageSizeOptions]=\"[20, 25, 50, 100]\"></mat-paginator>\r\n</div>"]}